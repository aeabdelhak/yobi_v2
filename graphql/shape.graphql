input ShapeConstrunct {
    name: String!
    description: String
    original_price: Float!
    promotioned_price: Float
    id_landing_page: ID!
}
type shape {
    id: ID!
    name: String!
    description: String
    original_price: Float!
    promotioned_price: Float
    status: Int!
    landing: landingPage! @belongsTo
    colors: [color] @hasMany
}

type ShapeForClient @model(class: "shape") {
    id: ID!
    name: String!
    description: String
    original_price: Float!
    promotioned_price: Float
    status: Int!
    colors: [color] @hasMany
    activatedColors: [color] @hasMany
}

extend type Mutation @guard {
    newShape(model: ShapeConstrunct @spread): shape! 
        @create
        @can(ability:"manage_landing_pages")

    deleteSahpe(id: ID!): shape @delete
    editShape(
        id: ID!
        name: String
        description: String
        original_price: Float
        promotioned_price: Float
        status: Int
    ): shape
    @update
    @can(ability:"manage_landing_pages")

}
extend type Query @guard {
    shape(id: ID! @eq): shape 
        @find
        @can(ability:"manage_landing_pages")
}
